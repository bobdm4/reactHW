{"version":3,"sources":["components/Controls/Controls.module.css","components/Balance/Balance.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/TransactionHistory/TransactionHistory.js","components/Dashbord/Dashbord.js","components/App.js","index.js"],"names":["module","exports","Controls","amount","onChange","typeBtn","className","style","controls","name","type","value","placeholder","onClick","Balance","balance","balanceInc","balanceDec","role","aria-label","TransactionHistory","transHist","history","map","trans","key","id","date","Dashbord","state","handleChange","e","setState","target","addTransaction","reset","notifyWarn","toast","warn","notifyError","error","s","btnType","addToHistory","shortid","generate","Date","toLocaleString","prevS","localStorage","getItem","JSON","parse","this","prevProp","prevState","setItem","stringify","length","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3bd630a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__S0WSo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__2ogld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__Ia-J7\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './Controls.module.css';\n\nconst Controls = ({ amount, onChange, typeBtn }) => {\n  return (\n    <section className={style.controls}>\n      <input\n        name=\"amount\"\n        type=\"number\"\n        value={amount}\n        onChange={onChange}\n        placeholder=\"Enter amount...\"\n      />\n      <button name=\"deposit\" onClick={typeBtn} type=\"button\">\n        Deposit\n      </button>\n      <button name=\"withdraw\" onClick={typeBtn} type=\"button\">\n        Withdraw\n      </button>\n    </section>\n  );\n};\n\nControls.propTypes = {\n  amount: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  typeBtn: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './Balance.module.css';\n\nconst Balance = ({ balance, balanceInc, balanceDec }) => (\n  <>\n    <section className={style.balance}>\n      <span role=\"img\" aria-label=\"inc\">\n        ⬆️{balanceInc}$\n      </span>\n      <span role=\"img\" aria-label=\"dec\">\n        ⬇️{balanceDec}$\n      </span>\n      <span>Balance: {balance}$</span>\n    </section>\n  </>\n);\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  balanceInc: PropTypes.number.isRequired,\n  balanceDec: PropTypes.number.isRequired,\n};\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transHist }) => (\n  <>\n    <table className={style.history}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transHist.map(trans => (\n          <tr key={trans.id}>\n            <td>{trans.type}</td>\n            <td>{trans.amount}$</td>\n            <td>{trans.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </>\n);\n\nTransactionHistory.propTypes = {\n  transHist: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\nexport default TransactionHistory;\n","import React, { Component } from 'react';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport shortid from 'shortid';\n\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\n\nexport default class Dashbord extends Component {\n  state = {\n    transHist: [],\n    amount: '',\n    balance: 0,\n    balanceInc: 0,\n    balanceDec: 0,\n  };\n\n  // hw3\n  componentDidMount() {\n    const history = localStorage.getItem('history');\n    if (history) {\n      const state = JSON.parse(history);\n      this.setState({ ...state });\n    }\n  }\n\n  componentDidUpdate(prevProp, prevState) {\n    const { transHist } = this.state;\n    if (prevState.transHist !== transHist) {\n      localStorage.setItem('history', JSON.stringify(this.state));\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  typeBtn = e => {\n    const { name } = e.target;\n    this.addTransaction({ ...this.state }, name);\n  };\n\n  reset = () => {\n    this.setState({\n      amount: '',\n    });\n  };\n\n  notifyWarn = () => toast.warn('Enter corect amount...');\n\n  notifyError = () =>\n    toast.error('Not enough money! Donate card (5375 4141 0728 7889!');\n\n  addTransaction = (s, btnType) => {\n    if (+s.amount <= 0) {\n      this.notifyWarn();\n      this.reset();\n      return;\n    }\n    const addToHistory = {\n      id: shortid.generate(),\n      type: btnType,\n      amount: +s.amount,\n      date: new Date().toLocaleString(),\n    };\n    if (btnType === 'deposit') {\n      this.setState(prevS => ({\n        transHist: [...prevS.transHist, addToHistory],\n        balance: s.balance + +s.amount,\n        balanceInc: s.balanceInc + +s.amount,\n      }));\n      this.reset();\n    } else if (btnType === 'withdraw') {\n      if (+s.amount <= s.balance) {\n        this.setState(prevS => ({\n          transHist: [...prevS.transHist, addToHistory],\n          balance: s.balance - +s.amount,\n          balanceDec: s.balanceDec + +s.amount,\n        }));\n        this.reset();\n      } else {\n        this.notifyError();\n        this.reset();\n      }\n    }\n  };\n\n  render() {\n    const { amount, balance, transHist, balanceInc, balanceDec } = this.state;\n    return (\n      <div className=\"dashbord\">\n        <Controls\n          amount={amount}\n          onChange={this.handleChange}\n          typeBtn={this.typeBtn}\n        />\n        <ToastContainer />\n        <Balance\n          balance={balance}\n          balanceInc={balanceInc}\n          balanceDec={balanceDec}\n        />\n        {transHist.length > 0 && <TransactionHistory transHist={transHist} />}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Dashbord from './Dashbord/Dashbord';\n\nconst App = () => (\n  <>\n    <Dashbord />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}